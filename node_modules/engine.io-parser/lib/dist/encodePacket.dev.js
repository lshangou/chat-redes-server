"use strict";

var _require = require("./commons"),
    PACKET_TYPES = _require.PACKET_TYPES;

var encodePacket = function encodePacket(_ref, supportsBinary, callback) {
  var type = _ref.type,
      data = _ref.data;

  if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {
    var buffer = toBuffer(data);
    return callback(encodeBuffer(buffer, supportsBinary));
  } // plain string


  return callback(PACKET_TYPES[type] + (data || ""));
};

var toBuffer = function toBuffer(data) {
  if (Buffer.isBuffer(data)) {
    return data;
  } else if (data instanceof ArrayBuffer) {
    return Buffer.from(data);
  } else {
    return Buffer.from(data.buffer, data.byteOffset, data.byteLength);
  }
}; // only 'message' packets can contain binary, so the type prefix is not needed


var encodeBuffer = function encodeBuffer(data, supportsBinary) {
  return supportsBinary ? data : "b" + data.toString("base64");
};

module.exports = encodePacket;